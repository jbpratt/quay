name: Netlify PR Previews

on:
  issue_comment:
    types: [created]

jobs:
  deploy-preview:
    name: Deploy PR Preview to Netlify
    runs-on: ubuntu-22.04
    # Only run on slash commands in PR comments from authorized users
    if: |
      github.event.issue.pull_request &&
      (contains(github.event.comment.body, '/netlify') || contains(github.event.comment.body, '/preview')) &&
      (github.event.comment.author_association == 'OWNER' ||
       github.event.comment.author_association == 'MEMBER' ||
       github.event.comment.author_association == 'COLLABORATOR')
    steps:
    - name: Get PR details
      id: pr
      uses: actions/github-script@v7
      with:
        script: |
          const pr = await github.rest.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number
          });
          return {
            ref: pr.data.head.ref,
            sha: pr.data.head.sha,
            number: pr.data.number,
            repo: pr.data.head.repo.full_name
          };

    - name: Checkout PR code
      uses: actions/checkout@v3
      with:
        repository: ${{ fromJson(steps.pr.outputs.result).repo }}
        ref: ${{ fromJson(steps.pr.outputs.result).sha }}

    - name: Install dependencies
      run: cd web && npm install

    - name: Build with mocked API
      run: cd web && MOCK_API=true npm run build
      env:
        MOCK_API: 'true'

    - name: Deploy to Netlify
      id: deploy
      uses: nwtgck/actions-netlify@v3.0
      with:
        publish-dir: './web/dist'
        production-deploy: false  # Always deploy as preview, never production
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: "Deploy preview for PR #${{ fromJson(steps.pr.outputs.result).number }} (triggered by /${{ contains(github.event.comment.body, '/netlify') && 'netlify' || 'preview' }})"
        enable-pull-request-comment: true
        enable-commit-comment: false
        overwrites-pull-request-comment: true
        alias: pr-${{ fromJson(steps.pr.outputs.result).number }}
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      timeout-minutes: 10
